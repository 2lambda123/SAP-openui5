sap.ui.define(['sap/ui/webc/common/thirdparty/base/renderer/ifDefined', 'sap/ui/webc/common/thirdparty/base/renderer/LitRenderer'], function (ifDefined, litRender) { 'use strict';

	function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e['default'] : e; }

	var ifDefined__default = /*#__PURE__*/_interopDefaultLegacy(ifDefined);

	const block0 = (context) => { return litRender.html`<div class="ui5-cal-root" @keydown=${context._onkeydown}><div id="${ifDefined__default(context._id)}-content" class="ui5-cal-content"><ui5-daypicker id="${ifDefined__default(context._id)}-daypicker" ?hidden="${context._isDayPickerHidden}" format-pattern="${ifDefined__default(context._formatPattern)}" .selectedDates="${ifDefined__default(context._selectedDatesTimestamps)}" ._hidden="${ifDefined__default(context._isDayPickerHidden)}" .primaryCalendarType="${ifDefined__default(context._primaryCalendarType)}" .selectionMode="${ifDefined__default(context.selectionMode)}" .minDate="${ifDefined__default(context.minDate)}" .maxDate="${ifDefined__default(context.maxDate)}" timestamp="${ifDefined__default(context._timestamp)}" ?hide-week-numbers="${context.hideWeekNumbers}" @ui5-change="${ifDefined__default(context.onSelectedDatesChange)}" @ui5-navigate="${ifDefined__default(context.onNavigate)}"></ui5-daypicker><ui5-monthpicker id="${ifDefined__default(context._id)}-MP" ?hidden="${context._isMonthPickerHidden}" format-pattern="${ifDefined__default(context._formatPattern)}" .selectedDates="${ifDefined__default(context._selectedDatesTimestamps)}" ._hidden="${ifDefined__default(context._isMonthPickerHidden)}" .primaryCalendarType="${ifDefined__default(context._primaryCalendarType)}" .minDate="${ifDefined__default(context.minDate)}" .maxDate="${ifDefined__default(context.maxDate)}" timestamp="${ifDefined__default(context._timestamp)}" @ui5-change="${ifDefined__default(context.onSelectedMonthChange)}" @ui5-navigate="${ifDefined__default(context.onNavigate)}"></ui5-monthpicker><ui5-yearpicker id="${ifDefined__default(context._id)}-YP" ?hidden="${context._isYearPickerHidden}" format-pattern="${ifDefined__default(context._formatPattern)}" .selectedDates="${ifDefined__default(context._selectedDatesTimestamps)}" ._hidden="${ifDefined__default(context._isYearPickerHidden)}" .primaryCalendarType="${ifDefined__default(context._primaryCalendarType)}" .minDate="${ifDefined__default(context.minDate)}" .maxDate="${ifDefined__default(context.maxDate)}" timestamp="${ifDefined__default(context._timestamp)}" @ui5-change="${ifDefined__default(context.onSelectedYearChange)}" @ui5-navigate="${ifDefined__default(context.onNavigate)}"></ui5-yearpicker></div><!-- Positioned above the content due to flex-direction:column-reverse, but physically here for tab order to work --><ui5-calendar-header id="${ifDefined__default(context._id)}-head" .primaryCalendarType="${ifDefined__default(context._primaryCalendarType)}" timestamp="${ifDefined__default(context._timestamp)}" .isPrevButtonDisabled="${ifDefined__default(context._previousButtonDisabled)}" .isNextButtonDisabled="${ifDefined__default(context._nextButtonDisabled)}" .isMonthButtonHidden="${ifDefined__default(context._isHeaderMonthButtonHidden)}" @ui5-previous-press="${ifDefined__default(context.onHeaderPreviousPress)}" @ui5-next-press="${ifDefined__default(context.onHeaderNextPress)}" @ui5-show-month-press="${ifDefined__default(context.onHeaderShowMonthPress)}" @ui5-show-year-press="${ifDefined__default(context.onHeaderShowYearPress)}"></ui5-calendar-header></div>`; };
	const main = (context, tags, suffix) => {
		litRender.setTags(tags);
		litRender.setSuffix(suffix);
		return block0(context);
	};

	return main;

});
